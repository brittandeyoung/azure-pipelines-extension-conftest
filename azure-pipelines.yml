trigger:
  batch: true
  branches:
    include:
      - '*'
pool:
  vmImage: 'ubuntu-latest'

variables:
  conftest_version: '0.18.2'

stages:
- stage: Build
  jobs:
  - job: Build_Task
    displayName: Build Task
    variables:
    - group: ado-marketplace
    steps:
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: './Tasks/ConftestInstaller'
      displayName: NPM Install ConftestInstaller Task
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: './Tasks/Conftest'
      displayName: NPM Install Conftest Task
    - script: |
        tsc
      displayName: Build ConftestInstaller Task
      workingDirectory: ./Tasks/ConftestInstaller/
    # - task: Npm@1
    #   inputs:
    #     command: 'custom'
    #     workingDir: './Tasks/ConftestInstaller'
    #     customCommand: 'test'
    #   displayName: Unit tests ConftestInstaller Task
    - script: |
        export INPUT_VERSION="0.18.2"
        node ./Tasks/ConftestInstaller/.bin/Index.js
      displayName: Run ConftestInstaller Task
    - script: |
        tsc
      displayName: Build Conftest Task
      workingDirectory: ./Tasks/Conftest/
    - script: |
        export INPUT_COMMAND="--version"
        export INPUT_ARGS=""
        node ./Tasks/Conftest/.bin/Index.js
      displayName: Run Conftest Task Version
    - script: |
        export INPUT_COMMAND="test"
        export INPUT_FILE="./tests/test.json"
        export INPUT_ARGS="-o stdout"
        node ./Tasks/Conftest/.bin/Index.js
      displayName: Run Conftest Task Test
    - script: |
        export INPUT_COMMAND="parse"
        export INPUT_FILE="./tests/test.json"
        export INPUT_ARGS=""
        node ./Tasks/Conftest/.bin/Index.js
      displayName: Run Conftest Task Parse
    - script: |
        export INPUT_COMMAND="verify"
        export INPUT_FILE=""
        export INPUT_ARGS=""
        node ./Tasks/Conftest/.bin/Index.js
      displayName: Run Conftest Task verify
    - script: |
        sudo npm install -g tfx-cli
      displayName: install tfx-cli
    - script: |
        tfx extension create --manifest-globs vss-extension.json
      displayName: Build extension
    - script: |
        tfx extension publish --manifest-globs vss-extension.json --share-with brittandeyoung --no-prompt  --token $VSTS_CLI_PAT --service-url https://marketplace.visualstudio.com
      displayName: Publish extension
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      env:
        VSTS_CLI_PAT: $(VSTS_CLI_PAT)
#     - publish: './'
#       artifact: extension
# - stage: Deploy
#   dependsOn: Build
#   condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
#   jobs:
#   - deployment: Terraform_Apply
#     displayName: Terraform Apply - DEV
#     environment: DEV
#     variables:
#     - group: vsphere-terraform
#     - name: TF_WORKSPACE
#       value: DEV
#     strategy:
#       runOnce:
#         deploy:
#           steps:
# - stage: Run_Tasks
#   jobs:
#   - job: Run_Tasks
#     displayName: Run Tasks
#     steps:
#     - task: conftestInstaller@0
#       inputs:
#         version: '0.18.2'
#     - task: conftest@0
#       inputs:
#         command: 'test'
#         file: './tests/test.json'
